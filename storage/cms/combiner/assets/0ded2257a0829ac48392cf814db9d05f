/**
 * jQuery.parallax-skeleton - Parallax-scrolling on a new level
 * Copyright (c) 2014 Rolf Isler
 * Licensed under MIT.
 * Date: 24.01.2014
 * @author Rolf Isler
 * @version 1.2.0
 **/

(function($) {

    $.fn.parallax = function(options) {

        // Default options
        var settings = $.extend({
            placeHolderName: '.parallax',
            parallax: 0.75,
            callback: function(){}
        }, options);

        //image settings
        var _imgTransX = new Array(),
        _imgTransY = new Array(),
        _imgPosY = 0,
        _window = $(window),
        _doc = document,
        _parallax = $(".parallax"),
        _body = $('body'),
        _winWith = parseInt(_window.width()),
        _winHeight = parseInt(_window.height()),
        //create parent element for the parallax-container
        parallaxParent = $(_doc.createElement("div"));
        parallaxParent.addClass("parallax-parent");
        parallaxParent.css({position: 'fixed'});
        _body.prepend(parallaxParent);

        _parallax.each(function(index, obj) {            
            var elem = $(obj),
            elemHeight = parseInt(elem.data("height")),
            elemWith = parseInt(elem.data("with")),
            elemImage = elem.data("image"),
            elemOffset = elem.offset().top - _window.scrollTop(),
            containerHeight = elem.data("container-height");
            
            _imgTransX[index] = 0;
            _imgTransY[index] = -elem.data("posy");            
            _imgPosY = elem.data("posy");

            //set placeholder properties
            $(settings.placeHolderName).css({
                height: containerHeight,
                width: '100%'
            }); 

            if (_winWith >= elemWith) {
                _imgTransX[index] = 0;
                elemWith = elemWith + (_winWith - elemWith);
                elemHeight = elemHeight * (_winWith / elemWith);
            } else {
                _imgTransX[index] = (_winWith - elemWith) / 2;
            }

            //create a parallax-container for each parallax object in the document
            var parallaxContainer = $(_doc.createElement("div"));
            parallaxContainer.addClass("parallax-container");
            parallaxContainer.css({
                visibility: 'visible',
                height: containerHeight,
                'transform': 'translate3d(0px, ' + elemOffset + 'px, 0px)',
                '-webkit-transform': 'translate3d(0px, ' + elemOffset + 'px, 0px)',
                overflow: 'hidden',
                position: 'fixed'
            });
            
            //create a image-container for each parallax-container
            var parallaxImage = $(_doc.createElement("div"));
            parallaxImage.addClass("parallax-image");
            parallaxImage.css({
                backgroundImage: "url('" + elemImage + "')",
                width: elemWith,
                height: elemHeight,
                'transform': 'translate3d(' + _imgTransX[index] + 'px, ' + (-(elemOffset) * settings.parallax + _imgTransY[index]) + 'px, 0px)',
                '-webkit-transform': 'translate3d(' + _imgTransX[index] + 'px, ' + (-(elemOffset) * settings.parallax + _imgTransY[index]) + 'px, 0px)',
                backgroundRepeat: 'no-repeat',
                backgroundSize: '100%'
            });

            //append those container tho its parents
            parallaxContainer.append(parallaxImage);
            parallaxParent.append(parallaxContainer);
        });

        var _parallaxContainer = $(".parallax-container"),
        _parallaxImage = $(".parallax-image");

        //set image position on resize
        _window.resize(function() {
            //update window-variables
            _winWith = parseInt(_window.width());
            _winHeight = parseInt(_window.height());
           
            _parallaxImage.each(function(index, obj) {
                var elem = $(obj),
                elemWith = parseInt($(_parallax.get(index)).data("with")),
                elemHeight = parseInt($(_parallax.get(index)).data("height"));
                
                if (_winWith >= elemWith) {
                    _imgTransX[index] = 0;
                    elemWith = elemWith + (_winWith - elemWith);
                    elemHeight = elemHeight * (_winWith / elemWith);
                } else {
                    _imgTransX[index] = (_winWith - elemWith) / 2;
                }

                elem.css({
                    'width': elemWith,
                    'height': elemHeight,
                    'transform': 'translate3d(' + _imgTransX[index] + 'px, ' + _imgTransY[index] + 'px, 0px)',
                    '-webkit-transform': 'translate3d(' + _imgTransX[index] + 'px, ' + _imgTransY[index] + 'px, 0px)'
                });
            });
            
            _parallaxContainer.each(function(index, obj) {
                var elem = $(obj); 
                elem.css({
                    height: $(_parallax[index]).data("container-height")
                });
            });
        });

        //bind on scroll event to window
        _window.scroll(function() {
            var scrollTop = _window.scrollTop(),
            contTop = _winHeight + scrollTop;

            //reset all css-properties
            _parallaxContainer.css({
                visibility: 'hidden',
                'transform': 'translate3d(0px, 0px, 0px)',
                '-webkit-transform': 'translate3d(0px, 0px, 0px)'
            });

            //loop through each parallax object on the document
            _parallax.each(function(index, obj) {
                var elem = $(obj),
                offset = elem.offset().top,
                position = (offset - scrollTop),
                visibility = 'visible',
                cont = $(_parallaxContainer.get(index)),
                containerHeight = elem.data("container-height");;

                //if container-top(offset.top) reaches the bottom of the window(winHeight + scrollTop) while scrolling ... 1*
                if ((contTop) >= offset) {
                    //but, if container-bottom(settings.containerHeight) reaches top of the window(scrollTop - offset.top)  while scrolling ... 2*
                    if ((scrollTop - offset) >= containerHeight) {
                        // 2* ... hide the container ...
                        position = 0;
                        visibility = 'hidden';
                    }

                    // 1* ... set the container visible and set it to the position of its placeholder ...
                    cont.css({
                        visibility: visibility,
                        'transform': 'translate3d(0px, ' + position + 'px, 0px)',
                        '-webkit-transform': 'translate3d(0px, ' + position + 'px, 0px)'
                    });

                    // ... set the parallax-image visible and translate it a bit slower as its container
                    _imgTransY[index] = (-(position) * settings.parallax - _imgPosY);
                    //translateImage($(cont.children().first()), _imgTransX[index], _imgTransY[index]);

                    cont.children().first().css({
                        'transform': 'translate3d(' + _imgTransX[index] + 'px, ' + _imgTransY[index] + 'px, 0px)',
                        '-webkit-transform': 'translate3d(' + _imgTransX[index] + 'px, ' + _imgTransY[index] + 'px, 0px)'
                    });
                }
            });
        });
        if(settings.callback != undefined && typeof settings.callback === 'function'){
            settings.callback();
        }
        return this;
    };
}(jQuery));
var Orion = (function() {
    var mobile;
    
    function hasClass(o, className){
        if (o.classList)
            return o.classList.contains(className);
        else
            return new RegExp('(^| )' + className + '( |$)', 'gi').test(o.className);
    }
    
    function addClass(o, className){
        if (o.classList)
            o.classList.add(className);
        else
            o.className += ' ' + className;
    }
    
    function removeClass(o, className){
        if (o.classList)
            o.classList.remove(className);
        else
            o.className = o.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
    }

    function setNavigation() {
        var winHeight = window.innerHeight,
            scrollTop = document.body.scrollTop || window.pageYOffset,        
            bigNav = document.getElementById('big_nav'),
            smallNav = document.getElementById('small_nav'),
            tabletNav = document.getElementById('tablet_nav_container');

        if(tabletNav) tabletNav.addEventListener('click', function(){
            if(hasClass(document.getElementById('tablet_nav'), 'hidden')){
                removeClass(document.getElementById('tablet_nav'), 'hidden');
            }else{
                addClass(document.getElementById('tablet_nav'), 'hidden');
            }
        });
        
        window.addEventListener('load', setNav);
        window.addEventListener('resize', setNav);
        window.addEventListener('scroll', function(){
            scrollTop = document.body.scrollTop || window.pageYOffset;
            
            if (!mobile) {
                //small navigation
                if (scrollTop > winHeight - 20) {
                    if(smallNav) smallNav.style.marginTop = '0';
                } else if (scrollTop <= winHeight - 50) {
                    if(smallNav) smallNav.style.marginTop = '-60px';
                }

                //big navigation
                if (scrollTop <= 80) {
                    removeClass(bigNav, 'bignav_hidden');
                } else {
                    addClass(bigNav, 'bignav_hidden');
                }
            }
        });        

        function setNav() {
            winHeight = window.innerHeight;
        }
    }

    return {
        init: function() {
            // --------------- check if site is loaded on a mobile(touchscreen) device ---------------
            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                mobile = true;
            } else {
                mobile = false;
            }
            
            // --------------- set navigation ---------------
            setNavigation();
        },
        isMobile: function() {
            return mobile;
        },
        colors: {
            red: '#CC3D18',
            violet: '#4710B5',
            white: '#FFF',
            black: '#000'
        }
    };
})();
/**
 * Copyright (c) 2007-2013 Ariel Flesler - aflesler<a>gmail<d>com | http://flesler.blogspot.com
 * Dual licensed under MIT and GPL.
 * @author Ariel Flesler
 * @version 1.4.6
 */
;(function($){var h=$.scrollTo=function(a,b,c){$(window).scrollTo(a,b,c)};h.defaults={axis:'xy',duration:parseFloat($.fn.jquery)>=1.3?0:1,limit:true};h.window=function(a){return $(window)._scrollable()};$.fn._scrollable=function(){return this.map(function(){var a=this,isWin=!a.nodeName||$.inArray(a.nodeName.toLowerCase(),['iframe','#document','html','body'])!=-1;if(!isWin)return a;var b=(a.contentWindow||a).document||a.ownerDocument||a;return/webkit/i.test(navigator.userAgent)||b.compatMode=='BackCompat'?b.body:b.documentElement})};$.fn.scrollTo=function(e,f,g){if(typeof f=='object'){g=f;f=0}if(typeof g=='function')g={onAfter:g};if(e=='max')e=9e9;g=$.extend({},h.defaults,g);f=f||g.duration;g.queue=g.queue&&g.axis.length>1;if(g.queue)f/=2;g.offset=both(g.offset);g.over=both(g.over);return this._scrollable().each(function(){if(e==null)return;var d=this,$elem=$(d),targ=e,toff,attr={},win=$elem.is('html,body');switch(typeof targ){case'number':case'string':if(/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(targ)){targ=both(targ);break}targ=$(targ,this);if(!targ.length)return;case'object':if(targ.is||targ.style)toff=(targ=$(targ)).offset()}$.each(g.axis.split(''),function(i,a){var b=a=='x'?'Left':'Top',pos=b.toLowerCase(),key='scroll'+b,old=d[key],max=h.max(d,a);if(toff){attr[key]=toff[pos]+(win?0:old-$elem.offset()[pos]);if(g.margin){attr[key]-=parseInt(targ.css('margin'+b))||0;attr[key]-=parseInt(targ.css('border'+b+'Width'))||0}attr[key]+=g.offset[pos]||0;if(g.over[pos])attr[key]+=targ[a=='x'?'width':'height']()*g.over[pos]}else{var c=targ[pos];attr[key]=c.slice&&c.slice(-1)=='%'?parseFloat(c)/100*max:c}if(g.limit&&/^\d+$/.test(attr[key]))attr[key]=attr[key]<=0?0:Math.min(attr[key],max);if(!i&&g.queue){if(old!=attr[key])animate(g.onAfterFirst);delete attr[key]}});animate(g.onAfter);function animate(a){$elem.animate(attr,f,g.easing,a&&function(){a.call(this,targ,g)})}}).end()};h.max=function(a,b){var c=b=='x'?'Width':'Height',scroll='scroll'+c;if(!$(a).is('html,body'))return a[scroll]-$(a)[c.toLowerCase()]();var d='client'+c,html=a.ownerDocument.documentElement,body=a.ownerDocument.body;return Math.max(html[scroll],body[scroll])-Math.min(html[d],body[d])};function both(a){return typeof a=='object'?a:{top:a,left:a}}})(jQuery);

jQuery.easing.jswing=jQuery.easing.swing;jQuery.extend(jQuery.easing,{def:"easeOutQuad",swing:function(e,f,a,h,g){return jQuery.easing[jQuery.easing.def](e,f,a,h,g)},easeInQuad:function(e,f,a,h,g){return h*(f/=g)*f+a},easeOutQuad:function(e,f,a,h,g){return -h*(f/=g)*(f-2)+a},easeInOutQuad:function(e,f,a,h,g){if((f/=g/2)<1){return h/2*f*f+a}return -h/2*((--f)*(f-2)-1)+a},easeInCubic:function(e,f,a,h,g){return h*(f/=g)*f*f+a},easeOutCubic:function(e,f,a,h,g){return h*((f=f/g-1)*f*f+1)+a},easeInOutCubic:function(e,f,a,h,g){if((f/=g/2)<1){return h/2*f*f*f+a}return h/2*((f-=2)*f*f+2)+a},easeInQuart:function(e,f,a,h,g){return h*(f/=g)*f*f*f+a},easeOutQuart:function(e,f,a,h,g){return -h*((f=f/g-1)*f*f*f-1)+a},easeInOutQuart:function(e,f,a,h,g){if((f/=g/2)<1){return h/2*f*f*f*f+a}return -h/2*((f-=2)*f*f*f-2)+a},easeInQuint:function(e,f,a,h,g){return h*(f/=g)*f*f*f*f+a},easeOutQuint:function(e,f,a,h,g){return h*((f=f/g-1)*f*f*f*f+1)+a},easeInOutQuint:function(e,f,a,h,g){if((f/=g/2)<1){return h/2*f*f*f*f*f+a}return h/2*((f-=2)*f*f*f*f+2)+a},easeInSine:function(e,f,a,h,g){return -h*Math.cos(f/g*(Math.PI/2))+h+a},easeOutSine:function(e,f,a,h,g){return h*Math.sin(f/g*(Math.PI/2))+a},easeInOutSine:function(e,f,a,h,g){return -h/2*(Math.cos(Math.PI*f/g)-1)+a},easeInExpo:function(e,f,a,h,g){return(f==0)?a:h*Math.pow(2,10*(f/g-1))+a},easeOutExpo:function(e,f,a,h,g){return(f==g)?a+h:h*(-Math.pow(2,-10*f/g)+1)+a},easeInOutExpo:function(e,f,a,h,g){if(f==0){return a}if(f==g){return a+h}if((f/=g/2)<1){return h/2*Math.pow(2,10*(f-1))+a}return h/2*(-Math.pow(2,-10*--f)+2)+a},easeInCirc:function(e,f,a,h,g){return -h*(Math.sqrt(1-(f/=g)*f)-1)+a},easeOutCirc:function(e,f,a,h,g){return h*Math.sqrt(1-(f=f/g-1)*f)+a},easeInOutCirc:function(e,f,a,h,g){if((f/=g/2)<1){return -h/2*(Math.sqrt(1-f*f)-1)+a}return h/2*(Math.sqrt(1-(f-=2)*f)+1)+a},easeInElastic:function(f,h,e,l,k){var i=1.70158;var j=0;var g=l;if(h==0){return e}if((h/=k)==1){return e+l}if(!j){j=k*0.3}if(g<Math.abs(l)){g=l;var i=j/4}else{var i=j/(2*Math.PI)*Math.asin(l/g)}return -(g*Math.pow(2,10*(h-=1))*Math.sin((h*k-i)*(2*Math.PI)/j))+e},easeOutElastic:function(f,h,e,l,k){var i=1.70158;var j=0;var g=l;if(h==0){return e}if((h/=k)==1){return e+l}if(!j){j=k*0.3}if(g<Math.abs(l)){g=l;var i=j/4}else{var i=j/(2*Math.PI)*Math.asin(l/g)}return g*Math.pow(2,-10*h)*Math.sin((h*k-i)*(2*Math.PI)/j)+l+e},easeInOutElastic:function(f,h,e,l,k){var i=1.70158;var j=0;var g=l;if(h==0){return e}if((h/=k/2)==2){return e+l}if(!j){j=k*(0.3*1.5)}if(g<Math.abs(l)){g=l;var i=j/4}else{var i=j/(2*Math.PI)*Math.asin(l/g)}if(h<1){return -0.5*(g*Math.pow(2,10*(h-=1))*Math.sin((h*k-i)*(2*Math.PI)/j))+e}return g*Math.pow(2,-10*(h-=1))*Math.sin((h*k-i)*(2*Math.PI)/j)*0.5+l+e},easeInBack:function(e,f,a,i,h,g){if(g==undefined){g=1.70158}return i*(f/=h)*f*((g+1)*f-g)+a},easeOutBack:function(e,f,a,i,h,g){if(g==undefined){g=1.70158}return i*((f=f/h-1)*f*((g+1)*f+g)+1)+a},easeInOutBack:function(e,f,a,i,h,g){if(g==undefined){g=1.70158}if((f/=h/2)<1){return i/2*(f*f*(((g*=(1.525))+1)*f-g))+a}return i/2*((f-=2)*f*(((g*=(1.525))+1)*f+g)+2)+a},easeInBounce:function(e,f,a,h,g){return h-jQuery.easing.easeOutBounce(e,g-f,0,h,g)+a},easeOutBounce:function(e,f,a,h,g){if((f/=g)<(1/2.75)){return h*(7.5625*f*f)+a}else{if(f<(2/2.75)){return h*(7.5625*(f-=(1.5/2.75))*f+0.75)+a}else{if(f<(2.5/2.75)){return h*(7.5625*(f-=(2.25/2.75))*f+0.9375)+a}else{return h*(7.5625*(f-=(2.625/2.75))*f+0.984375)+a}}}},easeInOutBounce:function(e,f,a,h,g){if(f<g/2){return jQuery.easing.easeInBounce(e,f*2,0,h,g)*0.5+a}return jQuery.easing.easeOutBounce(e,f*2-g,0,h,g)*0.5+h*0.5+a}});